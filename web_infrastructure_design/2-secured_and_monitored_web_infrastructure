1Ô∏è‚É£ Infrastructure Overview
Your architecture consists of:

1 Load Balancer (HAProxy) ‚Üí Distributes traffic securely.

2 Backend Servers (each containing):

Nginx (Web Server) ‚Üí Handles HTTP/HTTPS requests.

Application Server ‚Üí Executes backend logic.

Application Files ‚Üí Stores website code.

MySQL (Database) ‚Üí Manages website data.

Security & Monitoring Additions:

3 Firewalls ‚Üí Protect against unauthorized access.

1 SSL Certificate ‚Üí Encrypts user traffic via HTTPS.

3 Monitoring Clients ‚Üí Tracks server performance.

2Ô∏è‚É£ Why Each Component is Added
‚úî Firewalls (3 total)

Purpose: Blocks unauthorized access and prevents cyberattacks.

Placement:

One before the Load Balancer (filters external requests).

One before backend servers (protects application servers).

One before the database (restricts direct access).

‚úî SSL Certificate

Why? Encrypts traffic between the user and the web server.

Prevents data interception and improves trust (HTTPS security).

‚úî Monitoring Clients

Why? Tracks server health, performance, and security events.

Tools like Sumologic, Prometheus, or Datadog provide logs and alerts.

3Ô∏è‚É£ How Monitoring Works
üîπ Data Collection

Logs HTTP requests, CPU usage, memory, and security events.

Uses agents installed on each server to send real-time data.

üîπ Monitoring Web Server QPS (Queries Per Second)

Use Nginx logs + Sumologic to track incoming requests.

Set up alerts when traffic spikes occur.

4Ô∏è‚É£ Issues in This Infrastructure
‚ö†Ô∏è SSL Termination at Load Balancer

If SSL is decrypted at HAProxy, traffic between the load balancer and backend is not encrypted, making it vulnerable.

‚ö†Ô∏è Only One MySQL Server Accepts Writes

If the primary database crashes, writes are blocked.

Solution: Use database replication with a failover mechanism.

‚ö†Ô∏è Each Server Has All Components

Scalability is limited because each server does everything.

Better Approach: Split database, application, and web servers across different machines.

5Ô∏è‚É£ Improvements to Address These Issues
‚úÖ Terminate SSL at backend servers to keep encryption end-to-end. ‚úÖ Use MySQL replication with an automatic failover system. ‚úÖ Separate database from web/app servers to improve performance.